version: '3.8'
volumes:
  postgres_data:
    driver: local

services:
  postgres:
    container_name: froom-postgres
    build:
      context: ./froom-backend
      dockerfile: DockerFile
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - '${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}'
    volumes:
      - ./froom-backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file:
      - .env
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
        interval: 10s
        timeout: 5s
        retries: 3

  backend:
    container_name: froom-backend
    build:
      context: ./froom-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:${POSTGRES_DOCKER_PORT}/${POSTGRES_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    env_file:
      - .env

  data-analysis:
    container_name: froom-data-analysis
    build:
      context: ./data-analysis
      dockerfile: DockerFile
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_RUN_HOST=${FLASK_RUN_HOST}
      - FLASK_RUN_PORT=${FLASK_RUN_PORT}
    env_file:
      - ./data-analysis/.env

  frontend:
    container_name: froom-frontend
    build:
      context: ./froom-frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file:
      - ./froom-frontend/.env
    volumes:
      - ./froom-frontend:/app
      - /app/node_modules
