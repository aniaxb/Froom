version: '3.8'
volumes:
  postgres_data:
    driver: local

services:
  postgres:
    container_name: froom-postgres
    build:
      context: ./froom-backend
      dockerfile: DockerFile
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - '${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}'
    volumes:
      - ./froom-backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file:
      - .env
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
        interval: 10s
        timeout: 5s
        retries: 3

  data-analysis:
    container_name: froom-data-analysis
    build:
      context: ./data-analysis
      dockerfile: DockerFile
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_RUN_HOST=${FLASK_RUN_HOST}
      - FLASK_RUN_PORT=${FLASK_RUN_PORT}
    env_file:
      - ./data-analysis/.env

  frontend:
    image: froom/frontend
    env_file: .env
    build:
      context: frontend
      dockerfile: DockerFile
    ports:
      - '5173:5173'
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - .:/froom/frontend
      - /froom/frontend/node_modules
